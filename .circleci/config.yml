# Couldn't automatically generate a config from your source code.
# This is a generic template to serve as a base for your custom config
# See: https://circleci.com/docs/configuration-reference
version: 2.1
jobs:
  test:
    docker:
      - image: cimg/node:20.13.1
    steps:
      - checkout
      - run:
          name: Run tests
          command: echo 'replace me with real tests!'
  build:
    docker:
      - image: cimg/node:20.13.1
    steps:
      - checkout
      - run:
          name: Enable corepack
          command: |
            sudo corepack enable
            yarn cache clean --all
            ls -alh
      - run:
          name: Upgrade yarn
          command: yarn set version 4.2.2
      - run:
          name: Verify Yarn Version
          command: yarn -v
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Build the application
          command: yarn build
      - run:
          name: List directory contents
          command: ls -la
      - persist_to_workspace:
          root: .
          paths: build/
  deploy_dev_iwcm:
    docker:
      - image: cimg/node:20.13.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: List build directory contents
          command: ls -la build
      - run:
          name: Run tests
          command: echo 'replace me with real tests!'
      - run:
          name: Deploy Dev to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_DEV.git main
      - persist_to_workspace:
          root: .
          paths: build/
  deploy_qa_iwcm:
    docker:
      - image: cimg/node:20.13.1
    steps:
      # Replace this with steps to deploy to users
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: echo 'replace me with real tests!'
      - run:
          name: Deploy QA to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_QA.git main
      - persist_to_workspace:
          root: .
          paths: build/
  deploy_staging_iwcm:
    docker:
      - image: cimg/node:20.13.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: echo 'replace me with real tests!'
      - run:
          name: Deploy Staging to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_STAGING.git main
      - persist_to_workspace:
          root: .
          paths: build/
  deploy_prod_iwcm:
    docker:
      - image: cimg/node:20.13.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run tests
          command: echo 'replace me with real tests!'
      - run:
          name: Deploy Prod to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_PROD.git main
workflows:
  build_deploy_main:
    jobs:
      - test:
          filters:
            branches:
              only:
                - main
      - build:
          requires:
            - test
      - deploy_dev_iwcm:
          requires:
            - build
          filters:
            branches:
              only:
                - main
      - deploy_qa_iwcm:
          type: approval
          requires:
            - deploy_dev_iwcm
          filters:
            branches:
              only:
                - main
      - deploy_staging_iwcm:
          type: approval
          requires:
            - deploy_qa_iwcm
          filters:
            branches:
              only:
                - main
      - deploy_prod_iwcm:
          type: approval
          requires:
            - deploy_staging_iwcm
          filters:
            branches:
              only:
                - main
